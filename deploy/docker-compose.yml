version: "3.5"

x-localtime: &host_localtime
  type: bind
  source: /etc/localtime
  target: /etc/localtime
  read_only: true

x-logging: &logging
  logging:
    driver: json-file
    options:
      tag: "{{.Name}}"
      max-size: ${LOG_MAX_SIZE:-5m}
      max-file: ${LOG_MAX_FILE:-1}

services:


  ngrok:
    image: ngrok/ngrok:latest
    <<: *logging
    restart: always
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN:?err}
    command: http --domain=${APP_DOMAIN:?err} 8888
    network_mode: host


  weather_bot:
    image: yakuptest/weather_bot:latest
    container_name: weather_tg_bot_build
    ports:
      - "8888:8888"
    labels:
      - prometheus_job=weather_tg_bot # For prometheus
    environment:
      - TOKEN=${TOKEN:?err}
      - API_KEY=${API_KEY:?err}
      - TG_BOT_API_URL=${TG_BOT_API_URL:?err}
      - APP_DOMAIN=${APP_DOMAIN:?err}
      - SECRET_TOKEN_TG_WEBHOOK=${SECRET_TOKEN_TG_WEBHOOK:?err}
    volumes:
      - /home/rustam/tg_env/.env:/app/.env
    command: python -m src.app
    restart: unless-stopped
    <<: *logging
    networks:
      - external


  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER:?err}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?err}
      - POSTGRES_DB=${POSTGRES_DB:?err}
    volumes:
      - /home/rustam/volumes_postgress_tg_bot:/var/lib/postgresql/data
    expose:
      - "5432"
    ports:
      - "5432:5432"
    networks:
      - external
    <<: *logging


  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"
    ports:
      - "9187:9187"
    labels:
      - prometheus_job=postgres_exporter
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - external


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    user: root
    ports:
      - "9090:9090"
    volumes:
      - /home/rustam/volumes_prometheus_tg_bot/prometheus.yml:/etc/prometheus/prometheus.yml
      - /home/rustam/volumes_prometheus_tg_bot/data:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - external
    <<: *logging

  grafana:
    image: grafana/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:?err}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:?err}
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - external
    <<: *logging


networks:
  internal:
    name: bot_internal
    driver: bridge
    internal: true
  external:
    name: bot_external
    driver: bridge