version: "3.5"

# [ extension definition ]
x-localtime: &host_localtime
  type: bind
  source: /etc/localtime
  target: /etc/localtime
  read_only: true


x-logging: &logging
  logging:
    driver: json-file
    options:
      tag: "{{.Name}}"
      max-size: ${LOG_MAX_SIZE:-5m}
      max-file: ${LOG_MAX_FILE:-1}


# [ container definition ]
services:
  ngrok:
    image: ngrok/ngrok:latest
    <<: *logging
    restart: always
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN:?err}
    command: http --domain=${APP_DOMAIN:?err} 8888
    network_mode: host

  #  weather_bot:
  #    image: sha256:ee4658d93c053ddf25c1adba0288fba945e14b466551f7bc7cb19ffb28e15098
  #    container_name: weather_tg_bot
  #    ports:
  #      - "8888:8888"
  #    environment:
  #      - TOKEN=${TOKEN:?err}
  #      - API_KEY=${API_KEY:?err}
  #      - TG_BOT_API_URL=${TG_BOT_API_URL:?err}
  #      - APP_DOMAIN=${APP_DOMAIN:?err}
  #      - SECRET_TOKEN_TG_WEBHOOK=${SECRET_TOKEN_TG_WEBHOOK:?err}
  #    #      - TOKEN=${TOKEN}
  #    #      - API_KEY=${API_KEY}
  #    restart: unless-stopped
  # TODO: bot service will be added here
  weather_bot:
    build: ..
    container_name: weather_tg_bot_build
    ports:
      - "8888:8888"
    environment:
      - TOKEN=${TOKEN:?err}
      - API_KEY=${API_KEY:?err}
      - TG_BOT_API_URL=${TG_BOT_API_URL:?err}
      - APP_DOMAIN=${APP_DOMAIN:?err}
      - SECRET_TOKEN_TG_WEBHOOK=${SECRET_TOKEN_TG_WEBHOOK:?err}
    #      - TOKEN=${TOKEN}
    #      - API_KEY=${API_KEY}
    restart: unless-stopped


  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER:?err}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?err}
      - POSTGRES_DB=${POSTGRES_DB:?err}
    volumes:
      - /home/rustam/volumes_postgress_tg_bot:/var/lib/postgresql/data
    expose:
      - "5432"
    ports:
      - "5432:5432"
    networks:
      #      - internal
      - external

# [ networks definition ]
networks:
  internal:
    name: bot_internal
    driver: bridge
    internal: true
  external:
    name: bot_external
    driver: bridge
